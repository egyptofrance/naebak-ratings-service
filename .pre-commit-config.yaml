repos:
  # Python code formatting and linting
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=88]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503, --max-complexity=10]
        additional_dependencies: [flake8-docstrings, flake8-import-order]

  # Security checks
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, app/, -ll]
        exclude: tests/

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.6.1
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --strict]
        additional_dependencies: [types-requests, types-redis]

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: requirements-txt-fixer

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Docker
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types: [yaml]

  # AI Governance and Custom Checks
  - repo: local
    hooks:
      - id: ai-governance-check
        name: AI Governance Code Quality Check
        entry: python scripts/ai_governance_hook.py
        language: python
        files: \.py$
        require_serial: true
        pass_filenames: true

      - id: code-test-ratio-check
        name: Code-Test Ratio Validation
        entry: python scripts/code_test_ratio_check.py
        language: python
        files: \.py$
        require_serial: true
        pass_filenames: false

      - id: coverage-check
        name: Test Coverage Validation (90%)
        entry: python scripts/coverage_check.py
        language: python
        files: \.py$
        require_serial: true
        pass_filenames: false

      - id: contract-validation
        name: API Contract Validation
        entry: python scripts/contract_validation.py
        language: python
        files: (\.py$|openapi\.yaml$|\.json$)
        require_serial: true
        pass_filenames: false

      - id: django-check
        name: Django System Check
        entry: python manage.py check
        language: python
        files: \.py$
        require_serial: true
        pass_filenames: false

      - id: django-migrations-check
        name: Django Migrations Check
        entry: python manage.py makemigrations --check --dry-run
        language: python
        files: (models\.py$|migrations/.*\.py$)
        require_serial: true
        pass_filenames: false

      - id: security-audit
        name: Security Dependencies Audit
        entry: safety check
        language: python
        files: requirements.*\.txt$
        require_serial: true
        pass_filenames: false

  # Documentation checks
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: (migrations/|tests/)

# Configuration
default_language_version:
  python: python3.11

default_stages: [commit, push]

# Exclude patterns
exclude: |
  (?x)^(
    migrations/.*|
    .*\.min\.(js|css)|
    node_modules/.*|
    \.git/.*|
    \.tox/.*|
    \.venv/.*|
    venv/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.coverage|
    htmlcov/.*|
    \.mypy_cache/.*|
    build/.*|
    dist/.*|
    \.egg-info/.*
  )$

# Fail fast - stop on first failure
fail_fast: true

# Minimum pre-commit version
minimum_pre_commit_version: 3.0.0
